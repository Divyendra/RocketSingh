<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="org.rocketsingh.android.rocketsinghpillion" >

    <uses-permission android:name="android.permission.INTERNET" />
    <!-- Permissions added for Google cloud messaging services -->
    <!-- The application can keep the processor from sleeping when a message is received. Optionalâ€”use only if the app wants to keep the device from sleeping. -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!-- The Android application can register and receive messages. -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <!-- A Unique permission to prevent other apps from registering and receiving our App msgs -->
    <permission
        android:name="org.rocketsingh.android.rocketsinghpillion.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="org.rocketsingh.android.rocketsinghpillion.permission.C2D_MESSAGE" />

    <!--
 The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but are recommended.
    -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />

    <!-- Allows the Maps API to cache map tile data in the device's external storage area. Not needed for 'M'(23) and above-->
    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE" android:maxSdkVersion="22" />
    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE" android:maxSdkVersion="22" />
    <!-- Allows the APIs to access Google web-based services. Added for GMaps-->
    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />

    <!-- The Google Maps Android API uses OpenGL ES version 2 to render the map -->
    <uses-feature
        android:glEsVersion="0x00020000" android:required="true"/>

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/RSAppTheme" >

        <meta-data
            android:name="io.fabric.ApiKey"
            android:value="9eade517ddfa421af825f65b18c0ff689d1b79aa" />
        <!--Meta data required Google Maps setup -->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />
        <meta-data
            android:name="com.google.android.maps.v2.API_KEY"
            android:value="@string/google_maps_key" />

        <!-- Below Receivers and Services added for Google Cloud Messaging functionality -->
        <!-- Handles messages sent from GCM to your application and calls GcmListenerService registered('RSGCMListenerService') -->
        <receiver
            android:name="com.google.android.gms.gcm.GcmReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="org.rocketsingh.android.rocketsinghpillion" />
            </intent-filter>
        </receiver>
        <!-- Intent Service to register with GCM servers and get a registration token -->
        <service
            android:name=".GCM.GCMRegistrationIntentService"
            android:exported="false" />
        <!-- GCMListenerService which enables various aspects of handling messages such as detecting different downstream message types -->
        <service
            android:name=".GCM.RSGCMListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </service>
        <!-- InstanceIDListenerService to handle the creation, rotation, and updating of registration tokens. -->
        <service
            android:name=".GCM.RSInstanceIDListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.gms.iid.InstanceID" />
            </intent-filter>
        </service>

        <!-- receiver which listens to jitteredtimeAlarmBroadcasts and triggers Syncs -->
        <receiver
            android:name=".GCM.TriggerSyncReceiver"
            android:exported="false" />


        <activity
            android:name=".ui.RSLaunchActivity"
            android:noHistory="true"
            android:theme="@android:style/Theme.NoDisplay" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".ui.Login.RSUserAuthActivity" />
        <activity
            android:name=".ui.Login.RegisterActivity"
            android:windowSoftInputMode="adjustResize|stateVisible" />
        <activity
            android:name=".ui.Login.LoginActivity"
            android:windowSoftInputMode="adjustResize|stateVisible" />
        <!--configchanges:To avoid tiny delay in map reloads -->
        <activity
            android:name=".ui.BikerMap.BikerMapActivity"
            android:configChanges="orientation|screenSize"
            android:theme="@style/RS.DrawerActivity"
            android:label="@string/title_activity_biker_map" >
        </activity>
        <activity
            android:name=".ui.Page2Activity"
            android:theme="@style/RS.DrawerActivity"
            android:label="@string/title_activity_page2" >
        </activity>
        <activity
            android:name=".ui.Page3Activity"
            android:theme="@style/RS.DrawerActivity"
            android:label="@string/title_activity_page3" >
        </activity>
        <activity android:name=".ui.history.HistoryActivity" android:label="@string/title_activity_history" />
        <activity android:name=".ui.TripActivity" android:label="@string/title_activity_trip" />
    </application>

</manifest> <!-- Server API Key-  To authenticate server when sending msgs -->
<!-- Sender ID-  identifies an app server that is permitted to send msgs to client app -->
