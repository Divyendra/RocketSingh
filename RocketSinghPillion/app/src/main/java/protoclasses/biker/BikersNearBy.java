// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: E:\workspace_android\workspace_androidstudio\RocketSinghPillion\protos\biker.proto
package biker;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Label.REPEATED;

public final class BikersNearBy extends Message {
  private static final long serialVersionUID = 0L;

  public static final List<BikerLocation> DEFAULT_BIKERLOCATIONS = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED, messageType = BikerLocation.class)
  public final List<BikerLocation> bikerLocations;

  public BikersNearBy(List<BikerLocation> bikerLocations) {
    this.bikerLocations = immutableCopyOf(bikerLocations);
  }

  private BikersNearBy(Builder builder) {
    this(builder.bikerLocations);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BikersNearBy)) return false;
    return equals(bikerLocations, ((BikersNearBy) other).bikerLocations);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = bikerLocations != null ? bikerLocations.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<BikersNearBy> {

    public List<BikerLocation> bikerLocations;

    public Builder() {
    }

    public Builder(BikersNearBy message) {
      super(message);
      if (message == null) return;
      this.bikerLocations = copyOf(message.bikerLocations);
    }

    public Builder bikerLocations(List<BikerLocation> bikerLocations) {
      this.bikerLocations = checkForNulls(bikerLocations);
      return this;
    }

    @Override
    public BikersNearBy build() {
      return new BikersNearBy(this);
    }
  }
}
