// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: E:\workspace_android\workspace_androidstudio\RocketSinghBiker\protos\MobileRequest.proto
package mobilerequest;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import request.TripData;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class RequestData extends Message {
  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ENTITY_ID = "";
  public static final Integer DEFAULT_ENTITY_TYPE = 0;
  public static final String DEFAULT_TIME_ID = "";
  public static final String DEFAULT_REQUEST_STATUS_FLAG = "";

  @ProtoField(tag = 1, type = STRING)
  public final String entity_id;

  @ProtoField(tag = 2, type = INT32)
  public final Integer entity_type;

  @ProtoField(tag = 3, type = STRING)
  public final String time_id;

  @ProtoField(tag = 4, type = STRING)
  public final String request_status_flag;

  @ProtoField(tag = 5)
  public final TripData tripData;

  @ProtoField(tag = 6)
  public final CancellationDetails cancellationDetails;

  public RequestData(String entity_id, Integer entity_type, String time_id, String request_status_flag, TripData tripData, CancellationDetails cancellationDetails) {
    this.entity_id = entity_id;
    this.entity_type = entity_type;
    this.time_id = time_id;
    this.request_status_flag = request_status_flag;
    this.tripData = tripData;
    this.cancellationDetails = cancellationDetails;
  }

  private RequestData(Builder builder) {
    this(builder.entity_id, builder.entity_type, builder.time_id, builder.request_status_flag, builder.tripData, builder.cancellationDetails);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RequestData)) return false;
    RequestData o = (RequestData) other;
    return equals(entity_id, o.entity_id)
        && equals(entity_type, o.entity_type)
        && equals(time_id, o.time_id)
        && equals(request_status_flag, o.request_status_flag)
        && equals(tripData, o.tripData)
        && equals(cancellationDetails, o.cancellationDetails);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = entity_id != null ? entity_id.hashCode() : 0;
      result = result * 37 + (entity_type != null ? entity_type.hashCode() : 0);
      result = result * 37 + (time_id != null ? time_id.hashCode() : 0);
      result = result * 37 + (request_status_flag != null ? request_status_flag.hashCode() : 0);
      result = result * 37 + (tripData != null ? tripData.hashCode() : 0);
      result = result * 37 + (cancellationDetails != null ? cancellationDetails.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<RequestData> {

    public String entity_id;
    public Integer entity_type;
    public String time_id;
    public String request_status_flag;
    public TripData tripData;
    public CancellationDetails cancellationDetails;

    public Builder() {
    }

    public Builder(RequestData message) {
      super(message);
      if (message == null) return;
      this.entity_id = message.entity_id;
      this.entity_type = message.entity_type;
      this.time_id = message.time_id;
      this.request_status_flag = message.request_status_flag;
      this.tripData = message.tripData;
      this.cancellationDetails = message.cancellationDetails;
    }

    public Builder entity_id(String entity_id) {
      this.entity_id = entity_id;
      return this;
    }

    public Builder entity_type(Integer entity_type) {
      this.entity_type = entity_type;
      return this;
    }

    public Builder time_id(String time_id) {
      this.time_id = time_id;
      return this;
    }

    public Builder request_status_flag(String request_status_flag) {
      this.request_status_flag = request_status_flag;
      return this;
    }

    public Builder tripData(TripData tripData) {
      this.tripData = tripData;
      return this;
    }

    public Builder cancellationDetails(CancellationDetails cancellationDetails) {
      this.cancellationDetails = cancellationDetails;
      return this;
    }

    @Override
    public RequestData build() {
      return new RequestData(this);
    }
  }
}
