// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: E:\workspace_android\workspace_androidstudio\RocketSinghBiker\protos\MobileResponse.proto
package mobileresponse;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import request.PaymentDetails;

import static com.squareup.wire.Message.Datatype.STRING;

/**
 * Used as reponse to biker once it completes the trip
 */
public final class PaymentDetailResponse extends Message {
  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_STATUS = "";

  @ProtoField(tag = 1, type = STRING)
  public final String status;

  @ProtoField(tag = 2)
  public final PaymentDetails paymentDetails;

  public PaymentDetailResponse(String status, PaymentDetails paymentDetails) {
    this.status = status;
    this.paymentDetails = paymentDetails;
  }

  private PaymentDetailResponse(Builder builder) {
    this(builder.status, builder.paymentDetails);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PaymentDetailResponse)) return false;
    PaymentDetailResponse o = (PaymentDetailResponse) other;
    return equals(status, o.status)
        && equals(paymentDetails, o.paymentDetails);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = status != null ? status.hashCode() : 0;
      result = result * 37 + (paymentDetails != null ? paymentDetails.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PaymentDetailResponse> {

    public String status;
    public PaymentDetails paymentDetails;

    public Builder() {
    }

    public Builder(PaymentDetailResponse message) {
      super(message);
      if (message == null) return;
      this.status = message.status;
      this.paymentDetails = message.paymentDetails;
    }

    public Builder status(String status) {
      this.status = status;
      return this;
    }

    public Builder paymentDetails(PaymentDetails paymentDetails) {
      this.paymentDetails = paymentDetails;
      return this;
    }

    @Override
    public PaymentDetailResponse build() {
      return new PaymentDetailResponse(this);
    }
  }
}
