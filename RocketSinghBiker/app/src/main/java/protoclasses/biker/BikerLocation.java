// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: E:\workspace_android\workspace_androidstudio\RocketSinghBiker\protos\biker.proto
package biker;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.DOUBLE;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;

/**
 * Biker location details
 */
public final class BikerLocation extends Message {
  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_SELFIE_URL = "";
  public static final String DEFAULT_FIRST_NAME = "";
  public static final String DEFAULT_LAST_NAME = "";
  public static final String DEFAULT_BIKE_LICENSE_PLATE = "";
  public static final String DEFAULT_PHONE = "";
  public static final String DEFAULT_ALTERNATE_PHONE = "";
  public static final String DEFAULT_BIKER_TYPE = "";
  public static final Double DEFAULT_CURRENT_LAT = 0D;
  public static final Double DEFAULT_CURRENT_LONG = 0D;
  public static final List<AssignedRequestId> DEFAULT_CURRENT_REQUEST = Collections.emptyList();
  public static final Long DEFAULT_DATE_CREATED = 0L;
  public static final Long DEFAULT_BIKER_ID = 0L;
  public static final Double DEFAULT_DISTANCEFROMMERCHANT = 0D;
  public static final Long DEFAULT_DESTLOCATIONLEVEL = 0L;
  public static final String DEFAULT_BIKER_DEVICE_TOKEN = "";
  public static final String DEFAULT_BIKERSTATUS = "";

  @ProtoField(tag = 1, type = STRING)
  public final String selfie_url;

  @ProtoField(tag = 2, type = STRING)
  public final String first_name;

  @ProtoField(tag = 3, type = STRING)
  public final String last_name;

  @ProtoField(tag = 4, type = STRING)
  public final String bike_license_plate;

  @ProtoField(tag = 5, type = STRING)
  public final String phone;

  @ProtoField(tag = 6, type = STRING)
  public final String alternate_phone;

  @ProtoField(tag = 7, type = STRING)
  public final String biker_type;

  @ProtoField(tag = 8, type = DOUBLE)
  public final Double current_lat;

  @ProtoField(tag = 9, type = DOUBLE)
  public final Double current_long;

  @ProtoField(tag = 10, label = REPEATED, messageType = AssignedRequestId.class)
  public final List<AssignedRequestId> current_request;

  /**
   * Date on which this Record was created
   */
  @ProtoField(tag = 11, type = INT64)
  public final Long date_created;

  @ProtoField(tag = 12, type = INT64)
  public final Long biker_id;

  /**
   * The below two are used just for findbikers usecase and not useful for insert/updateBikerlocation.
   */
  @ProtoField(tag = 13, type = DOUBLE)
  public final Double distanceFromMerchant;

  @ProtoField(tag = 14, type = INT64)
  public final Long destLocationLevel;

  /**
   * Biker device token given by GCM
   */
  @ProtoField(tag = 15, type = STRING)
  public final String biker_device_token;

  /**
   * To replacebikerstatusupdate, below is added
   */
  @ProtoField(tag = 16, type = STRING)
  public final String bikerStatus;

  public BikerLocation(String selfie_url, String first_name, String last_name, String bike_license_plate, String phone, String alternate_phone, String biker_type, Double current_lat, Double current_long, List<AssignedRequestId> current_request, Long date_created, Long biker_id, Double distanceFromMerchant, Long destLocationLevel, String biker_device_token, String bikerStatus) {
    this.selfie_url = selfie_url;
    this.first_name = first_name;
    this.last_name = last_name;
    this.bike_license_plate = bike_license_plate;
    this.phone = phone;
    this.alternate_phone = alternate_phone;
    this.biker_type = biker_type;
    this.current_lat = current_lat;
    this.current_long = current_long;
    this.current_request = immutableCopyOf(current_request);
    this.date_created = date_created;
    this.biker_id = biker_id;
    this.distanceFromMerchant = distanceFromMerchant;
    this.destLocationLevel = destLocationLevel;
    this.biker_device_token = biker_device_token;
    this.bikerStatus = bikerStatus;
  }

  private BikerLocation(Builder builder) {
    this(builder.selfie_url, builder.first_name, builder.last_name, builder.bike_license_plate, builder.phone, builder.alternate_phone, builder.biker_type, builder.current_lat, builder.current_long, builder.current_request, builder.date_created, builder.biker_id, builder.distanceFromMerchant, builder.destLocationLevel, builder.biker_device_token, builder.bikerStatus);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BikerLocation)) return false;
    BikerLocation o = (BikerLocation) other;
    return equals(selfie_url, o.selfie_url)
        && equals(first_name, o.first_name)
        && equals(last_name, o.last_name)
        && equals(bike_license_plate, o.bike_license_plate)
        && equals(phone, o.phone)
        && equals(alternate_phone, o.alternate_phone)
        && equals(biker_type, o.biker_type)
        && equals(current_lat, o.current_lat)
        && equals(current_long, o.current_long)
        && equals(current_request, o.current_request)
        && equals(date_created, o.date_created)
        && equals(biker_id, o.biker_id)
        && equals(distanceFromMerchant, o.distanceFromMerchant)
        && equals(destLocationLevel, o.destLocationLevel)
        && equals(biker_device_token, o.biker_device_token)
        && equals(bikerStatus, o.bikerStatus);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = selfie_url != null ? selfie_url.hashCode() : 0;
      result = result * 37 + (first_name != null ? first_name.hashCode() : 0);
      result = result * 37 + (last_name != null ? last_name.hashCode() : 0);
      result = result * 37 + (bike_license_plate != null ? bike_license_plate.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (alternate_phone != null ? alternate_phone.hashCode() : 0);
      result = result * 37 + (biker_type != null ? biker_type.hashCode() : 0);
      result = result * 37 + (current_lat != null ? current_lat.hashCode() : 0);
      result = result * 37 + (current_long != null ? current_long.hashCode() : 0);
      result = result * 37 + (current_request != null ? current_request.hashCode() : 1);
      result = result * 37 + (date_created != null ? date_created.hashCode() : 0);
      result = result * 37 + (biker_id != null ? biker_id.hashCode() : 0);
      result = result * 37 + (distanceFromMerchant != null ? distanceFromMerchant.hashCode() : 0);
      result = result * 37 + (destLocationLevel != null ? destLocationLevel.hashCode() : 0);
      result = result * 37 + (biker_device_token != null ? biker_device_token.hashCode() : 0);
      result = result * 37 + (bikerStatus != null ? bikerStatus.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<BikerLocation> {

    public String selfie_url;
    public String first_name;
    public String last_name;
    public String bike_license_plate;
    public String phone;
    public String alternate_phone;
    public String biker_type;
    public Double current_lat;
    public Double current_long;
    public List<AssignedRequestId> current_request;
    public Long date_created;
    public Long biker_id;
    public Double distanceFromMerchant;
    public Long destLocationLevel;
    public String biker_device_token;
    public String bikerStatus;

    public Builder() {
    }

    public Builder(BikerLocation message) {
      super(message);
      if (message == null) return;
      this.selfie_url = message.selfie_url;
      this.first_name = message.first_name;
      this.last_name = message.last_name;
      this.bike_license_plate = message.bike_license_plate;
      this.phone = message.phone;
      this.alternate_phone = message.alternate_phone;
      this.biker_type = message.biker_type;
      this.current_lat = message.current_lat;
      this.current_long = message.current_long;
      this.current_request = copyOf(message.current_request);
      this.date_created = message.date_created;
      this.biker_id = message.biker_id;
      this.distanceFromMerchant = message.distanceFromMerchant;
      this.destLocationLevel = message.destLocationLevel;
      this.biker_device_token = message.biker_device_token;
      this.bikerStatus = message.bikerStatus;
    }

    public Builder selfie_url(String selfie_url) {
      this.selfie_url = selfie_url;
      return this;
    }

    public Builder first_name(String first_name) {
      this.first_name = first_name;
      return this;
    }

    public Builder last_name(String last_name) {
      this.last_name = last_name;
      return this;
    }

    public Builder bike_license_plate(String bike_license_plate) {
      this.bike_license_plate = bike_license_plate;
      return this;
    }

    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    public Builder alternate_phone(String alternate_phone) {
      this.alternate_phone = alternate_phone;
      return this;
    }

    public Builder biker_type(String biker_type) {
      this.biker_type = biker_type;
      return this;
    }

    public Builder current_lat(Double current_lat) {
      this.current_lat = current_lat;
      return this;
    }

    public Builder current_long(Double current_long) {
      this.current_long = current_long;
      return this;
    }

    public Builder current_request(List<AssignedRequestId> current_request) {
      this.current_request = checkForNulls(current_request);
      return this;
    }

    /**
     * Date on which this Record was created
     */
    public Builder date_created(Long date_created) {
      this.date_created = date_created;
      return this;
    }

    public Builder biker_id(Long biker_id) {
      this.biker_id = biker_id;
      return this;
    }

    /**
     * The below two are used just for findbikers usecase and not useful for insert/updateBikerlocation.
     */
    public Builder distanceFromMerchant(Double distanceFromMerchant) {
      this.distanceFromMerchant = distanceFromMerchant;
      return this;
    }

    public Builder destLocationLevel(Long destLocationLevel) {
      this.destLocationLevel = destLocationLevel;
      return this;
    }

    /**
     * Biker device token given by GCM
     */
    public Builder biker_device_token(String biker_device_token) {
      this.biker_device_token = biker_device_token;
      return this;
    }

    /**
     * To replacebikerstatusupdate, below is added
     */
    public Builder bikerStatus(String bikerStatus) {
      this.bikerStatus = bikerStatus;
      return this;
    }

    @Override
    public BikerLocation build() {
      return new BikerLocation(this);
    }
  }
}
