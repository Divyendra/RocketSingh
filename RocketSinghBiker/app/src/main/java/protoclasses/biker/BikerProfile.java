// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: E:\workspace_android\workspace_androidstudio\RocketSinghBiker\protos\biker.proto
package biker;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoEnum;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;

public final class BikerProfile extends Message {
  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_DRIVING_LICENSE_NUMBER = "";
  public static final String DEFAULT_FIRST_NAME = "";
  public static final String DEFAULT_LAST_NAME = "";
  public static final String DEFAULT_BIKE_LICENSE_PLATE = "";
  public static final String DEFAULT_PHONE = "";
  public static final String DEFAULT_ALTERNATE_PHONE = "";
  public static final String DEFAULT_DEVICE_TYPE = "";
  public static final String DEFAULT_EMAIL_ID = "";
  public static final String DEFAULT_ALTERNATE_EMAIL_ID = "";
  public static final String DEFAULT_SELFIE_URL = "";
  public static final String DEFAULT_DRIVING_LICENSE_URL = "";
  public static final String DEFAULT_STREET_ADDRESS = "";
  public static final String DEFAULT_SUB_LOCALITY = "";
  public static final String DEFAULT_LOCALITY = "";
  public static final String DEFAULT_CITY = "";
  public static final String DEFAULT_STATE = "";
  public static final String DEFAULT_COUNTRY = "";
  public static final String DEFAULT_ZIP_CODE = "";
  public static final String DEFAULT_LANDMARK = "";
  public static final String DEFAULT_BIKER_TYPE = "";
  public static final String DEFAULT_BIKE_REGISTRATION_PAPERS_URL = "";
  public static final String DEFAULT_REFERRED_BY = "";
  public static final String DEFAULT_SALES_PERSON = "";
  public static final PayMethod DEFAULT_PAY_METHOD = PayMethod.CASH;
  public static final PayFrequency DEFAULT_PAY_FREQUENCY = PayFrequency.DAILY;
  public static final String DEFAULT_FIXED_PAY = "";
  public static final String DEFAULT_BANK_ACCOUNT_IFSC = "";
  public static final String DEFAULT_BANK_ACCOUNT_NAME = "";
  public static final String DEFAULT_BANK_ACCOUNT_NUMBER = "";
  public static final String DEFAULT_DESCRIPTION = "";
  public static final Integer DEFAULT_IS_APPROVED = 0;
  public static final String DEFAULT_FB_PAGE = "";
  public static final Long DEFAULT_DATE_CREATED = 0L;
  public static final Long DEFAULT_ACCOUNT_EXPIRY_DATE = 0L;
  public static final String DEFAULT_PASSWORD = "";
  public static final String DEFAULT_DEVICE_TOKEN = "";

  @ProtoField(tag = 1, type = STRING)
  public final String driving_license_number;

  @ProtoField(tag = 2, type = STRING)
  public final String first_name;

  @ProtoField(tag = 3, type = STRING)
  public final String last_name;

  @ProtoField(tag = 4, type = STRING)
  public final String bike_license_plate;

  @ProtoField(tag = 5, type = STRING)
  public final String phone;

  @ProtoField(tag = 6, type = STRING)
  public final String alternate_phone;

  @ProtoField(tag = 7, type = STRING)
  public final String device_type;

  @ProtoField(tag = 8, type = STRING)
  public final String email_id;

  @ProtoField(tag = 9, type = STRING)
  public final String alternate_email_id;

  @ProtoField(tag = 10, type = STRING)
  public final String selfie_url;

  @ProtoField(tag = 11, type = STRING)
  public final String driving_license_url;

  /**
   * Address details
   */
  @ProtoField(tag = 12, type = STRING)
  public final String street_address;

  @ProtoField(tag = 13, type = STRING)
  public final String sub_locality;

  @ProtoField(tag = 14, type = STRING)
  public final String locality;

  @ProtoField(tag = 15, type = STRING)
  public final String city;

  @ProtoField(tag = 16, type = STRING)
  public final String state;

  @ProtoField(tag = 17, type = STRING)
  public final String country;

  @ProtoField(tag = 18, type = STRING)
  public final String zip_code;

  @ProtoField(tag = 19, type = STRING)
  public final String landmark;

  @ProtoField(tag = 20, type = STRING)
  public final String biker_type;

  @ProtoField(tag = 21, type = STRING)
  public final String bike_registration_papers_url;

  /**
   * Referral source
   */
  @ProtoField(tag = 22, type = STRING)
  public final String referred_by;

  @ProtoField(tag = 23, type = STRING)
  public final String sales_person;

  @ProtoField(tag = 24, type = ENUM)
  public final PayMethod pay_method;

  @ProtoField(tag = 25, type = ENUM)
  public final PayFrequency pay_frequency;

  @ProtoField(tag = 26, type = STRING)
  public final String fixed_pay;

  @ProtoField(tag = 27, type = STRING)
  public final String bank_account_ifsc;

  @ProtoField(tag = 28, type = STRING)
  public final String bank_account_name;

  @ProtoField(tag = 29, type = STRING)
  public final String bank_account_number;

  @ProtoField(tag = 30, type = STRING)
  public final String description;

  @ProtoField(tag = 31, type = INT32)
  public final Integer is_approved;

  /**
   * Biker facebook profile
   */
  @ProtoField(tag = 32, type = STRING)
  public final String fb_page;

  /**
   * Date on which this Record was created
   */
  @ProtoField(tag = 33, type = INT64)
  public final Long date_created;

  @ProtoField(tag = 35, type = INT64)
  public final Long account_expiry_date;

  /**
   * Account password & device token given by GCM
   */
  @ProtoField(tag = 34, type = STRING)
  public final String password;

  @ProtoField(tag = 36, type = STRING)
  public final String device_token;

  public BikerProfile(String driving_license_number, String first_name, String last_name, String bike_license_plate, String phone, String alternate_phone, String device_type, String email_id, String alternate_email_id, String selfie_url, String driving_license_url, String street_address, String sub_locality, String locality, String city, String state, String country, String zip_code, String landmark, String biker_type, String bike_registration_papers_url, String referred_by, String sales_person, PayMethod pay_method, PayFrequency pay_frequency, String fixed_pay, String bank_account_ifsc, String bank_account_name, String bank_account_number, String description, Integer is_approved, String fb_page, Long date_created, Long account_expiry_date, String password, String device_token) {
    this.driving_license_number = driving_license_number;
    this.first_name = first_name;
    this.last_name = last_name;
    this.bike_license_plate = bike_license_plate;
    this.phone = phone;
    this.alternate_phone = alternate_phone;
    this.device_type = device_type;
    this.email_id = email_id;
    this.alternate_email_id = alternate_email_id;
    this.selfie_url = selfie_url;
    this.driving_license_url = driving_license_url;
    this.street_address = street_address;
    this.sub_locality = sub_locality;
    this.locality = locality;
    this.city = city;
    this.state = state;
    this.country = country;
    this.zip_code = zip_code;
    this.landmark = landmark;
    this.biker_type = biker_type;
    this.bike_registration_papers_url = bike_registration_papers_url;
    this.referred_by = referred_by;
    this.sales_person = sales_person;
    this.pay_method = pay_method;
    this.pay_frequency = pay_frequency;
    this.fixed_pay = fixed_pay;
    this.bank_account_ifsc = bank_account_ifsc;
    this.bank_account_name = bank_account_name;
    this.bank_account_number = bank_account_number;
    this.description = description;
    this.is_approved = is_approved;
    this.fb_page = fb_page;
    this.date_created = date_created;
    this.account_expiry_date = account_expiry_date;
    this.password = password;
    this.device_token = device_token;
  }

  private BikerProfile(Builder builder) {
    this(builder.driving_license_number, builder.first_name, builder.last_name, builder.bike_license_plate, builder.phone, builder.alternate_phone, builder.device_type, builder.email_id, builder.alternate_email_id, builder.selfie_url, builder.driving_license_url, builder.street_address, builder.sub_locality, builder.locality, builder.city, builder.state, builder.country, builder.zip_code, builder.landmark, builder.biker_type, builder.bike_registration_papers_url, builder.referred_by, builder.sales_person, builder.pay_method, builder.pay_frequency, builder.fixed_pay, builder.bank_account_ifsc, builder.bank_account_name, builder.bank_account_number, builder.description, builder.is_approved, builder.fb_page, builder.date_created, builder.account_expiry_date, builder.password, builder.device_token);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof BikerProfile)) return false;
    BikerProfile o = (BikerProfile) other;
    return equals(driving_license_number, o.driving_license_number)
        && equals(first_name, o.first_name)
        && equals(last_name, o.last_name)
        && equals(bike_license_plate, o.bike_license_plate)
        && equals(phone, o.phone)
        && equals(alternate_phone, o.alternate_phone)
        && equals(device_type, o.device_type)
        && equals(email_id, o.email_id)
        && equals(alternate_email_id, o.alternate_email_id)
        && equals(selfie_url, o.selfie_url)
        && equals(driving_license_url, o.driving_license_url)
        && equals(street_address, o.street_address)
        && equals(sub_locality, o.sub_locality)
        && equals(locality, o.locality)
        && equals(city, o.city)
        && equals(state, o.state)
        && equals(country, o.country)
        && equals(zip_code, o.zip_code)
        && equals(landmark, o.landmark)
        && equals(biker_type, o.biker_type)
        && equals(bike_registration_papers_url, o.bike_registration_papers_url)
        && equals(referred_by, o.referred_by)
        && equals(sales_person, o.sales_person)
        && equals(pay_method, o.pay_method)
        && equals(pay_frequency, o.pay_frequency)
        && equals(fixed_pay, o.fixed_pay)
        && equals(bank_account_ifsc, o.bank_account_ifsc)
        && equals(bank_account_name, o.bank_account_name)
        && equals(bank_account_number, o.bank_account_number)
        && equals(description, o.description)
        && equals(is_approved, o.is_approved)
        && equals(fb_page, o.fb_page)
        && equals(date_created, o.date_created)
        && equals(account_expiry_date, o.account_expiry_date)
        && equals(password, o.password)
        && equals(device_token, o.device_token);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = driving_license_number != null ? driving_license_number.hashCode() : 0;
      result = result * 37 + (first_name != null ? first_name.hashCode() : 0);
      result = result * 37 + (last_name != null ? last_name.hashCode() : 0);
      result = result * 37 + (bike_license_plate != null ? bike_license_plate.hashCode() : 0);
      result = result * 37 + (phone != null ? phone.hashCode() : 0);
      result = result * 37 + (alternate_phone != null ? alternate_phone.hashCode() : 0);
      result = result * 37 + (device_type != null ? device_type.hashCode() : 0);
      result = result * 37 + (email_id != null ? email_id.hashCode() : 0);
      result = result * 37 + (alternate_email_id != null ? alternate_email_id.hashCode() : 0);
      result = result * 37 + (selfie_url != null ? selfie_url.hashCode() : 0);
      result = result * 37 + (driving_license_url != null ? driving_license_url.hashCode() : 0);
      result = result * 37 + (street_address != null ? street_address.hashCode() : 0);
      result = result * 37 + (sub_locality != null ? sub_locality.hashCode() : 0);
      result = result * 37 + (locality != null ? locality.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (country != null ? country.hashCode() : 0);
      result = result * 37 + (zip_code != null ? zip_code.hashCode() : 0);
      result = result * 37 + (landmark != null ? landmark.hashCode() : 0);
      result = result * 37 + (biker_type != null ? biker_type.hashCode() : 0);
      result = result * 37 + (bike_registration_papers_url != null ? bike_registration_papers_url.hashCode() : 0);
      result = result * 37 + (referred_by != null ? referred_by.hashCode() : 0);
      result = result * 37 + (sales_person != null ? sales_person.hashCode() : 0);
      result = result * 37 + (pay_method != null ? pay_method.hashCode() : 0);
      result = result * 37 + (pay_frequency != null ? pay_frequency.hashCode() : 0);
      result = result * 37 + (fixed_pay != null ? fixed_pay.hashCode() : 0);
      result = result * 37 + (bank_account_ifsc != null ? bank_account_ifsc.hashCode() : 0);
      result = result * 37 + (bank_account_name != null ? bank_account_name.hashCode() : 0);
      result = result * 37 + (bank_account_number != null ? bank_account_number.hashCode() : 0);
      result = result * 37 + (description != null ? description.hashCode() : 0);
      result = result * 37 + (is_approved != null ? is_approved.hashCode() : 0);
      result = result * 37 + (fb_page != null ? fb_page.hashCode() : 0);
      result = result * 37 + (date_created != null ? date_created.hashCode() : 0);
      result = result * 37 + (account_expiry_date != null ? account_expiry_date.hashCode() : 0);
      result = result * 37 + (password != null ? password.hashCode() : 0);
      result = result * 37 + (device_token != null ? device_token.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<BikerProfile> {

    public String driving_license_number;
    public String first_name;
    public String last_name;
    public String bike_license_plate;
    public String phone;
    public String alternate_phone;
    public String device_type;
    public String email_id;
    public String alternate_email_id;
    public String selfie_url;
    public String driving_license_url;
    public String street_address;
    public String sub_locality;
    public String locality;
    public String city;
    public String state;
    public String country;
    public String zip_code;
    public String landmark;
    public String biker_type;
    public String bike_registration_papers_url;
    public String referred_by;
    public String sales_person;
    public PayMethod pay_method;
    public PayFrequency pay_frequency;
    public String fixed_pay;
    public String bank_account_ifsc;
    public String bank_account_name;
    public String bank_account_number;
    public String description;
    public Integer is_approved;
    public String fb_page;
    public Long date_created;
    public Long account_expiry_date;
    public String password;
    public String device_token;

    public Builder() {
    }

    public Builder(BikerProfile message) {
      super(message);
      if (message == null) return;
      this.driving_license_number = message.driving_license_number;
      this.first_name = message.first_name;
      this.last_name = message.last_name;
      this.bike_license_plate = message.bike_license_plate;
      this.phone = message.phone;
      this.alternate_phone = message.alternate_phone;
      this.device_type = message.device_type;
      this.email_id = message.email_id;
      this.alternate_email_id = message.alternate_email_id;
      this.selfie_url = message.selfie_url;
      this.driving_license_url = message.driving_license_url;
      this.street_address = message.street_address;
      this.sub_locality = message.sub_locality;
      this.locality = message.locality;
      this.city = message.city;
      this.state = message.state;
      this.country = message.country;
      this.zip_code = message.zip_code;
      this.landmark = message.landmark;
      this.biker_type = message.biker_type;
      this.bike_registration_papers_url = message.bike_registration_papers_url;
      this.referred_by = message.referred_by;
      this.sales_person = message.sales_person;
      this.pay_method = message.pay_method;
      this.pay_frequency = message.pay_frequency;
      this.fixed_pay = message.fixed_pay;
      this.bank_account_ifsc = message.bank_account_ifsc;
      this.bank_account_name = message.bank_account_name;
      this.bank_account_number = message.bank_account_number;
      this.description = message.description;
      this.is_approved = message.is_approved;
      this.fb_page = message.fb_page;
      this.date_created = message.date_created;
      this.account_expiry_date = message.account_expiry_date;
      this.password = message.password;
      this.device_token = message.device_token;
    }

    public Builder driving_license_number(String driving_license_number) {
      this.driving_license_number = driving_license_number;
      return this;
    }

    public Builder first_name(String first_name) {
      this.first_name = first_name;
      return this;
    }

    public Builder last_name(String last_name) {
      this.last_name = last_name;
      return this;
    }

    public Builder bike_license_plate(String bike_license_plate) {
      this.bike_license_plate = bike_license_plate;
      return this;
    }

    public Builder phone(String phone) {
      this.phone = phone;
      return this;
    }

    public Builder alternate_phone(String alternate_phone) {
      this.alternate_phone = alternate_phone;
      return this;
    }

    public Builder device_type(String device_type) {
      this.device_type = device_type;
      return this;
    }

    public Builder email_id(String email_id) {
      this.email_id = email_id;
      return this;
    }

    public Builder alternate_email_id(String alternate_email_id) {
      this.alternate_email_id = alternate_email_id;
      return this;
    }

    public Builder selfie_url(String selfie_url) {
      this.selfie_url = selfie_url;
      return this;
    }

    public Builder driving_license_url(String driving_license_url) {
      this.driving_license_url = driving_license_url;
      return this;
    }

    /**
     * Address details
     */
    public Builder street_address(String street_address) {
      this.street_address = street_address;
      return this;
    }

    public Builder sub_locality(String sub_locality) {
      this.sub_locality = sub_locality;
      return this;
    }

    public Builder locality(String locality) {
      this.locality = locality;
      return this;
    }

    public Builder city(String city) {
      this.city = city;
      return this;
    }

    public Builder state(String state) {
      this.state = state;
      return this;
    }

    public Builder country(String country) {
      this.country = country;
      return this;
    }

    public Builder zip_code(String zip_code) {
      this.zip_code = zip_code;
      return this;
    }

    public Builder landmark(String landmark) {
      this.landmark = landmark;
      return this;
    }

    public Builder biker_type(String biker_type) {
      this.biker_type = biker_type;
      return this;
    }

    public Builder bike_registration_papers_url(String bike_registration_papers_url) {
      this.bike_registration_papers_url = bike_registration_papers_url;
      return this;
    }

    /**
     * Referral source
     */
    public Builder referred_by(String referred_by) {
      this.referred_by = referred_by;
      return this;
    }

    public Builder sales_person(String sales_person) {
      this.sales_person = sales_person;
      return this;
    }

    public Builder pay_method(PayMethod pay_method) {
      this.pay_method = pay_method;
      return this;
    }

    public Builder pay_frequency(PayFrequency pay_frequency) {
      this.pay_frequency = pay_frequency;
      return this;
    }

    public Builder fixed_pay(String fixed_pay) {
      this.fixed_pay = fixed_pay;
      return this;
    }

    public Builder bank_account_ifsc(String bank_account_ifsc) {
      this.bank_account_ifsc = bank_account_ifsc;
      return this;
    }

    public Builder bank_account_name(String bank_account_name) {
      this.bank_account_name = bank_account_name;
      return this;
    }

    public Builder bank_account_number(String bank_account_number) {
      this.bank_account_number = bank_account_number;
      return this;
    }

    public Builder description(String description) {
      this.description = description;
      return this;
    }

    public Builder is_approved(Integer is_approved) {
      this.is_approved = is_approved;
      return this;
    }

    /**
     * Biker facebook profile
     */
    public Builder fb_page(String fb_page) {
      this.fb_page = fb_page;
      return this;
    }

    /**
     * Date on which this Record was created
     */
    public Builder date_created(Long date_created) {
      this.date_created = date_created;
      return this;
    }

    public Builder account_expiry_date(Long account_expiry_date) {
      this.account_expiry_date = account_expiry_date;
      return this;
    }

    /**
     * Account password & device token given by GCM
     */
    public Builder password(String password) {
      this.password = password;
      return this;
    }

    public Builder device_token(String device_token) {
      this.device_token = device_token;
      return this;
    }

    @Override
    public BikerProfile build() {
      return new BikerProfile(this);
    }
  }

  public enum PayMethod
      implements ProtoEnum {
    CASH(0),
    NEFT(1),
    PAYPAL(2);

    private final int value;

    private PayMethod(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }

  public enum PayFrequency
      implements ProtoEnum {
    DAILY(0),
    WEEKLY_FRIDAY(1),
    BIWEEKLY_FRIDAY(2),
    SEMIMONTHLY(3),
    MONTHLY(4);

    private final int value;

    private PayFrequency(int value) {
      this.value = value;
    }

    @Override
    public int getValue() {
      return value;
    }
  }
}
